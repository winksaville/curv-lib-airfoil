let
  trivial = [[4, 0], [1, 0.4], [0, 0], [1, 0.2]];
  normalizedTrivial = [[1, 0], [0.25, 0.1], [0, 0], [0.25, 0.05]];

  // MH49 airfoil coordinates
  mh49 = [
      [1000,0]
    , [996.64,-0.35]
    , [986.52,-1.22]
    , [969.69,-2.19]
    , [946.38,-2.94]
    , [916.87,-3.2201]
    , [881.52,-2.73]
    , [840.76,-1.08]
    , [795.4099,2.3]
    , [746.78,7.58]
    , [696.0499,14.49]
    , [644.25,22.63]
    , [592.43,31.51]
    , [541.62,40.22]
    , [492.05,47.49]
    , [443.25,52.85]
    , [395.16,56.54]
    , [348.13,58.73]
    , [302.52,59.54]
    , [258.77,59.09]
    , [217.31,57.46]
    , [178.56,54.73]
    , [142.88,50.97]
    , [110.65,46.27]
    , [82.14,40.72]
    , [57.6,34.42]
    , [37.22,27.53]
    , [21.16,20.24]
    , [9.5,12.77]
    , [2.31,5.52]
    , [0,-0.6401]
    , [3.58,-6.35]
    , [12.87,-12.61]
    , [26.91,-18.98]
    , [45.49,-25.06]
    , [68.4599,-30.6]
    , [95.67,-35.38]
    , [126.96,-39.27]
    , [162.17,-42.19]
    , [201.05,-44.17]
    , [243.26,-45.23]
    , [288.42,-45.47]
    , [336.07,-44.96]
    , [385.72,-43.7701]
    , [436.86,-42]
    , [488.92,-39.76]
    , [541.32,-37.15]
    , [593.43,-34.27]
    , [644.64,-31.2]
    , [694.34,-28]
    , [741.95,-24.73]
    , [786.9199,-21.44]
    , [828.74,-18.19]
    , [866.93,-15.06]
    , [900.97,-12.13]
    , [930.44,-9.4]
    , [954.97,-6.9]
    , [974.25,-4.6101]
    , [988.17,-2.44]
    , [996.89,-0.6801]
  ];

  // Load lib as a record in this scope
  laf = file "lib-airfoil.curv";

  // Load lib into this scope
  include file "lib-airfoil.curv";
in do
  print "lib-airfoil_test";

  // Test trivial raw
  assert(tePt trivial == [4,0]);
  assert(teX trivial == 4);
  assert(teY trivial == 0);
  assert(leX trivial == 0);
  assert(leY trivial == 0);

  // Test trivial normalized and use laf record
  local nTrivial = normalize(trivial);
  assert(nTrivial == normalizedTrivial);
  assert(laf.tePt nTrivial == [1,0]);
  assert(laf.teX nTrivial == 1);
  assert(laf.teY nTrivial == 0);
  assert(laf.leX nTrivial == 0);
  assert(laf.leY nTrivial == 0);

  // Test mh49 raw
  assert(tePt mh49 == [1000,0]);
  assert(teX mh49 == 1000);
  assert(teY mh49 == 0);
  assert(leX mh49 == 0);
  assert(leY mh49 == -0.6401);

  // Test normalized mh49 and use laf record
  local nMh49 = normalize(mh49);
  assert(laf.tePt nMh49 == [1,0]);
  assert(laf.teX nMh49 == 1);
  assert(laf.teY nMh49 == 0);
  assert(laf.leX nMh49 == 0);
  assert(laf.leY nMh49 == -0.0006401);

  // Test fatten, currently a NOP
  assert(normalizedTrivial == laf.fattenTe {naf: nTrivial});
  assert(nMh49 == fattenTe {naf: nMh49});
  assert(mh49 == fattenTe {naf: mh49});
in
  row [polygon nMh49, polygon nTrivial]

